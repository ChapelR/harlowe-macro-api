// macro-passages.min.js, for Harlow Macro API, by Chapel
;!function(){"use strict";function c(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}var g=require("passages"),d=require("internaltypes/twineerror"),y=require("section"),h=require("internaltypes/varscope");function e(e){if(!g.hasValid(e))return d.create("macro",'(macro:) The passage "'+e+'" does not exist.');var r=g.get(e);if(!r.get("tags").includes("macro"))return d.create("macro",'(macro:) The passage "'+e+'" is not marked with the "macro" tag.',"Custom macros are opt-in via the macro tag to reduce the likelihood of running a non-macro formatted passage on accident.");var t=r.get("source"),n=$(document.createElement("p"));n.attr({tags:""});for(var a=y.create(n),o=Object.create(h),i=arguments.length,c=new Array(1<i?i-1:0),u=1;u<i;u++)c[u-1]=arguments[u];o.args=c,a.renderInto(t,n,void 0,o);var s=n.find("tw-error").first();if(0==s.length)return o.result;var l=s.attr("title"),f=s.textNodes()[0].textContent,m=s.textNodes()[2].textContent;return d.create("macro",'(macro:"'+e+'") '+f,l+": "+m)}Harlowe.macro("macro",e);var r,t=function(e){if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=function(e,r){if(!e)return;if("string"==typeof e)return c(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(t);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return c(e,r)}(e))){var r=0,t=function(){};return{s:t,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var n,a,o=!0,i=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return o=e.done,e},e:function(e){i=!0,a=e},f:function(){try{o||null==n.return||n.return()}finally{if(i)throw a}}}}(g.getTagged("macro").filter(function(e){return e.get("tags").includes("auto-macro")}));try{for(t.s();!(r=t.n()).done;){var n=r.value,a=n.get("name");a=a.toLowerCase().replace(/[^a-z]/g,""),Harlowe.macro(a,e.bind(this,n.get("name")))}}catch(e){t.e(e)}finally{t.f()}}();
// end macro-passages.min.js